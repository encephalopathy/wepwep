require("MoveableObject")
--require("ParticleManager")
--require("ParticleEmitter")
--require("Particle")
--[[
	CLASS NAME: Ride

	DESCRIPTION:  The base class for all ships in Shoot em' up PEW PEW.  All ships have a designated health and power amount.  Also,
	ships also have the ability to carry bombs and additional heaters ("Weapons").
	
	FUNCTIONS:
	@init: Gives the ride no bombs, heaters, health and power.
	@move: See inherit doc.
	@shoot Makes the ride shoot
	@destroy: Destroys the ship
]]--


Ride = MoveableObject:subclass("Ride")
--[[
	FUNCTION NAME: init
	
	DESCRIPTION: Initializes the Ride's parent class as well as gives the Ride the specified health and powah
	
	PARAMETERS:
		@see inherit doc.
	RETURN: VOID
]]--
--function Ride:init(x, y, scaleX, scaleY, imgSrc, sceneGroup, shipPieces)
function Ride:init(sceneGroup, imgSrc, startX, startY, rotation, width, height)
	self.super:init(sceneGroup, imgSrc, "dynamic", startX, startY, rotation, width, height)
	self.health = 0
	self.powah = powah
	--self:createParticleAssets(sceneGroup)
	--self.particleEmitter = self:createShipPieceParticleEmitter(sceneGroup, scaleX, scaleY, shipPieces)
end


--[[
	FUNCTION NAME: createParticleAssets

	DESCRIPTION: Creates the particles that will be generated by this ride.
				 
	RETURN: VOID

--]]
--[[function Ride:createParticleAssets(sceneGroup)

	--creates an explosion particle effect by leveraging off of sprite sheets.
	local explosion = RNFactory.createAnim("img/exp2.png", 64, 64, self.sprite.x, self.sprite.y, 3, 3)
	explosion.scalex = 3; explosion.scaley = 3
	explosion.frame = 0
	explosion:newSequence("explode", {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16}, 24, 1, function()
		explosion.visible = false
	end)
	explosion.visible = false
	self.explosion = explosion

	--Variables for the exploding particles.
	
end]]--


--[[function Ride:createShipPieceParticleEmitter(sceneGroup, scaleX, scaleY, shipPieces)
	local v0x = 5
	local v0y = 5
	local ax = -0.0035
	local ay = -0.0035
	local emitTime = 20
	local emitAngle = 0
	local particleEmitter = ParticleEmitter:new(self.sprite.x, self.sprite.y, emitTime)
	if shipPieces ~= nil then
		for i = 1, #shipPieces, 1 do
			local vx = v0x * math.cos(emitAngle / (2 * math.pi))
			local vy = v0y * math.sin(emitAngle / (2 * math.pi))
		
			local newParticle = Particle:new(shipPieces[i], 0.8 * scaleX, 0.8 * scaleY, sceneGroup, vx, vy, ax, ay, 15, 200)
			particleEmitter:add(newParticle)
		
			emitAngle = emitAngle + (75 / math.pi)
		end
	
		addParticleEmitter(particleEmitter)
	end
	return particleEmitter
end]]--


function Ride:onHit(event)
	self.super:onHit(event)
end

--[[
	FUNCTION NAME: move
	
	DESCRIPTION: Moves the ride to the desired x and y direction
	
	PARAMETERS:
		@see inherit doc.
	RETURN: VOID
--]]
function Ride:move(x, y)
	--self.particleEmitter:updateLoc(x, y)
	self.super:move(x, y)
end

--[[ FUNCTION NAME: explode

	 DESCRIPTION: Creates an array of particles when ships are
	 destroyed.
	 
	 RETURN: VOID
]]--
--[[function Ride:explode()
	self.explosion.visible = true
	self.particleEmitter:updateLoc(x, y)
	self.particleEmitter:start()
	self.explosion.x = self.sprite.x; self.explosion.y = self.sprite.y;
	self.explosion:play("explode")
end]]--

--[[
	FUNCTION NAME: destroy
	
	DESCRIPTION: Destroys the Ride and garbage collects
	all bombs and heaters.
	
	RETURN: VOID
]]--
function Ride:destroy()
	self.bombs = nil
	self.heaters = nil
	--removeParticleEmitter(self.particleEmitter)
	--self.particleEmitter:destroy()
	--self.particleEmitter = nil
	self.explosion = nil --[[Not sure if this garbage collects the explosion 
							because it is not added to the Scene group in Rappanui.
						]]--
	self.super:destroy()
end
